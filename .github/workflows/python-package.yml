---
name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
#  workflow_dispatch:

env:
  INSTALL_DIR: ${{ github.workspace }}/install
  ERT_SHOW_BACKTRACE: 1

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8"]

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      
      - name: Setup environment
        run: |
          echo "::add-path::${{ env.INSTALL_DIR}}/bin"
          echo "::set-env name=LD_LIBRARY_PATH::${{ env.INSTALL_DIR }}/lib:${{ env.INSTALL_DIR }}/lib64"
          echo "::set-env name=DYLD_LIBRARY_PATH::${{ env.INSTALL_DIR }}/lib:${{ env.INSTALL_DIR }}/lib64"
          echo "::set-env name=PYTHONPATH::${{ env.INSTALL_DIR }}/lib/python${{ matrix.python-version }}/site-packages:${{ env.INSTALL_DIR }}/lib/python${{ matrix.python-version }}/dist-packages"
      
      - name: Install dependencies and semeio
        run: |
          python -m pip install --upgrade pip
          pip install semeio

      - name: Install ERT and dependencies
        run: |
          git clone --branch master --depth 1 https://github.com/equinor/ert
          source ert/.libres_version
          git clone --branch $LIBRES_VERSION --depth 1 https://github.com/equinor/libres
          source libres/.libecl_version
          git clone --branch $LIBECL_VERSION --depth 1 https://github.com/equinor/libecl
          bash ert/.build_install.sh libecl
          bash ert/.build_install.sh libres
          pip install -r ert/dev-requirements.txt
          pip install ert/
          pip list
          ert --help

      - name: "Install dependencies"
        run: |
          set -xe
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade coverage[toml] virtualenv tox tox-gh-actions

      - name: "Run tox targets for ${{ matrix.python-version }}"
        run: "python -m tox"
